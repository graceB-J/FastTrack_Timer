{"version":3,"sources":["imgs/fried_chicken.png","imgs/no_chicken.png","SelectionArea.js","TimerComponents.js","Timer.js","History.js","FastSurvey.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SelectionArea","props","state","className","Container","Button","onClick","handleAddFast","InputGroup","Prepend","FormControl","type","id","name","required","minLength","parseFloat","document","getElementById","value","React","Component","Countdown","pad","num","size","s","substr","length","timeLeft","Math","floor","TimerButton","handleStart","handleCancel","variant","OverlayTrigger","trigger","key","placement","overlay","Popover","Title","as","Content","Timer","handleFinished","totalFastTime","useState","startDate","setStartDate","startTime","setStartTime","setTimeLeft","fasting","setFasting","totalTime","setTotalTime","useEffect","Date","now","interval","setInterval","fastLength","setShow","setShowNotif","clearInterval","show","halfMessage","setHalfMessage","showNotif","quoteIndex","setQuoteIndex","random","src","NoChicken","Chicken","style","position","zIndex","ProgressBar","height","marginTop","today","disabled","Alert","Heading","History","history","averageFastTime","round","filter","entry","success","reduce","prev","current","Row","Col","sm","Card","Body","Text","isNaN","class","Table","responsive","bordered","hover","slice","reverse","map","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","difficulty","additionalComments","FastSurvey","handleRadioChangeS","setState","prevState","console","log","handleRadioChangeD","handleCommentChange","event","target","Form","ToggleButtonGroup","onChange","this","defaultValue","ToggleButton","defaultChecked","Group","controlId","Control","rows","maxLength","placeholder","handleAddSurvey","App","minutes","hours","tempLength","fastInfo","surveyEnd","scrollIntoView","behavior","concat","promptSurvey","item","pop","push","Navbar","bg","sticky","Brand","inline","fluid","href","ref","el","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.db5190fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fried_chicken.c396c964.png\";","module.exports = __webpack_public_path__ + \"static/media/no_chicken.06ef909e.png\";","import React from 'react';\r\nimport './SelectionArea.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nclass SelectionArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SelectionAreaBox\">\r\n                <div className=\"FastRatioButtons\">\r\n                    <Container>\r\n                        <Button className=\"FastRatioButtons\" onClick={() => this.props.handleAddFast(16)}> 16:8 </Button>\r\n                        <Button className=\"FastRatioButtons\" onClick={() => this.props.handleAddFast(18)}> 18:6 </Button>\r\n                        <InputGroup className=\"CustomRatio\">\r\n                            <InputGroup.Prepend>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl type=\"number\" id=\"hours\" name=\"hours\" required minLength=\"1\" required maxLength=\"2\" placeholder=\"Hours here\" />\r\n                            <FormControl type=\"number\" id=\"minutes\" name=\"minutes\" required minLength=\"1\" required maxLength=\"2\" placeholder=\"Minutes here\" />\r\n                        </InputGroup>\r\n                        <div>\r\n                            <Button\r\n                                className=\"Submit\"\r\n                                onClick={() => this.props.handleAddFast(parseFloat(document.getElementById(\"minutes\").value) / 60.0 + parseFloat(document.getElementById(\"hours\").value))}>\r\n                                Submit Custom Time\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </Container>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SelectionArea;","import React from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\n\r\nimport SelectionArea from \"./SelectionArea.js\"\r\n\r\nimport './TimerComponents.css'\r\n\r\nconst Countdown = (props) => {\r\n  const pad = (num, size) => {\r\n    var s = \"000000000\" + num;\r\n    return s.substr(s.length-size);\r\n  }\r\n\r\n  const { timeLeft } = props;\r\n  return (\r\n    <h1>\r\n      {pad(Math.floor(timeLeft / (60 * 60)), 2)}:\r\n      {pad(Math.floor((timeLeft / 60) % 60), 2)}:\r\n      {pad(Math.floor(timeLeft % 60), 2)}\r\n    </h1>\r\n  );\r\n};\r\n\r\nconst TimerButton = (props) => {\r\n  const { handleStart, handleCancel, handleAddFast} = props;\r\n  return (\r\n    <div>\r\n      <Button className=\"timerButton\" id=\"start\" onClick={handleStart}>\r\n        Start\r\n      </Button>\r\n      <Button className=\"timerButton\" variant=\"danger\" onClick={handleCancel}>Cancel</Button>\r\n      <OverlayTrigger\r\n        trigger=\"click\"\r\n        key=\"bottom\"\r\n        placement=\"bottom\"\r\n        overlay={\r\n          <Popover>\r\n            <Popover.Title as=\"h3\">Set Fast Length</Popover.Title>\r\n            <Popover.Content>\r\n              <SelectionArea handleAddFast={handleAddFast} />\r\n            </Popover.Content>\r\n          </Popover>\r\n        }\r\n      >\r\n        <Button className=\"timerButton\" variant=\"secondary\">Toggle Timer Settings</Button>\r\n      </OverlayTrigger>{' '}\r\n    </div>\r\n  );\r\n};\r\nexport { Countdown, TimerButton };","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { Countdown, TimerButton } from \"./TimerComponents.js\";\r\nimport \"./Timer.css\";\r\nimport Chicken from './imgs/fried_chicken.png';\r\nimport NoChicken from './imgs/no_chicken.png';\r\n\r\nconst Timer = (props) => {\r\n  const { handleFinished, totalFastTime, handleAddFast } = props;\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [startTime, setStartTime] = useState(-1);\r\n  const [timeLeft, setTimeLeft] = useState(totalFastTime);\r\n  const [fasting, setFasting] = useState(true);\r\n  const [totalTime, setTotalTime] = useState(totalFastTime);\r\n\r\n  useEffect(() => {\r\n    if (startTime !== -1) {\r\n      setTimeLeft(totalTime - (Date.now() / 1000 - startTime));\r\n      const interval = setInterval(() => {\r\n        setTimeLeft(totalTime - (Date.now() / 1000 - startTime));\r\n        if (totalTime - (Date.now() / 1000 - startTime) < 1) {\r\n          if (fasting) {\r\n            handleFinished({\r\n              startDate: startDate,\r\n              fastLength: totalFastTime,\r\n            });\r\n            setFasting(false);\r\n            setTotalTime(24 * 60 * 60 - totalTime);\r\n            setStartTime(Date.now() / 1000);\r\n            setShow(false);\r\n            setShowNotif(false);\r\n          } else {\r\n            clearInterval(interval);\r\n          }\r\n        }\r\n      }, 500);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n      setTimeLeft(totalTime);\r\n    }\r\n  }, [startTime]);\r\n\r\n  useEffect(() => {\r\n    setTotalTime(totalFastTime);\r\n    setTimeLeft(totalFastTime);\r\n  }, [totalFastTime]);\r\n\r\n  const handleStart = () => {\r\n    let today = new Date();\r\n    setStartDate(today);\r\n    const start = document.getElementById(\"start\");\r\n    start.disabled = true;\r\n    setStartTime(Date.now() / 1000);\r\n    setHalfMessage(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    const start = document.getElementById(\"start\");\r\n    start.disabled = false;\r\n    setTotalTime(totalFastTime);\r\n    setStartTime(-1);\r\n    setFasting(true);\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [halfMessage, setHalfMessage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft - 1 < totalTime / 2 && halfMessage && fasting) {\r\n      setShow(true);\r\n      setHalfMessage(false);\r\n    }\r\n  })\r\n\r\n  const [showNotif, setShowNotif] = useState(false);\r\n  const [quoteIndex, setQuoteIndex] = useState(0);\r\n  useEffect(() => {\r\n    if (startTime !== -1) {\r\n      const interval = setInterval(() => {\r\n        if (fasting) {\r\n          setQuoteIndex(Math.floor(20 * Math.random()));\r\n          setShowNotif(true)\r\n        }\r\n      }, 30 * 12 * 5000);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n      setTimeLeft(totalTime);\r\n    }\r\n  }, [startTime]);\r\n\r\n  const InspirationalQuoteArr = [\"You got this!\", \"Keep it up!\",\r\n    \"Feel the burn\", \"All those calories lost!\", \"You're allowed to drink water!\",\r\n    \"Amazing. Incredible.\", \"You can do anything you set your mind to\",\r\n    \"Feel that weight leaving your body!\", \"Goodbye calories\", \"3 months from now, you'll thank yourself\",\r\n    \"Be your best you\", \"You can do it!\", \"Don't eat that muffin!\", \"Intermittent Fasting is SCIENCE\",\r\n    \"Water still doesn't count\", \"If you are tired of starting over, stop giving up.\", \"Believe in your goals!\",\r\n    \"Don't even think about eating that donut\", \"Think about how proud you will be after this\",\r\n    \"Roses are red, violets are blue, your stomach is grumbling, keep on fasting, you!\"];\r\n\r\n  return (\r\n    <div className=\"timerRoot\">\r\n      {fasting && <img src={NoChicken} className=\"fastIcon\" />}\r\n      {fasting && <h1>Fasting Period</h1>}\r\n      {!fasting && <img src={Chicken} className=\"fastIcon\" />}\r\n      {!fasting && <h1>Eating Period</h1>}\r\n      <Countdown style={{ position: \"relative\", zIndex: \"1\" }} timeLeft={timeLeft} />\r\n      <ProgressBar\r\n        style={{ height: \"60px\", marginTop: \"-60px\", position: \"relative\", zIndex: \"-1\" }}\r\n        className=\"progress\"\r\n        now={(timeLeft / totalTime) * 100} />\r\n      <TimerButton\r\n        handleStart={handleStart}\r\n        handleCancel={handleCancel}\r\n        handleAddFast={handleAddFast} />\r\n      <Alert show={show} variant=\"success\">\r\n        <Alert.Heading>Don't give up! You're halfway there!</Alert.Heading>\r\n        <hr />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button onClick={() => setShow(false)} variant=\"outline-success\">\r\n            Close alert\r\n          </Button>\r\n        </div>\r\n      </Alert><Alert show={showNotif} variant=\"success\">\r\n        <Alert.Heading>{InspirationalQuoteArr[quoteIndex]}</Alert.Heading>\r\n        <hr />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button onClick={() => setShowNotif(false)} variant=\"outline-success\">\r\n            Close alert\r\n          </Button>\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;","import React from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport \"./History.css\"\r\n\r\nconst History = (props) => {\r\n  const { history } = props;\r\n\r\n  let averageFastTime = Math.round(\r\n    (history.filter(entry => entry.success === \"Yes\").reduce((prev, current) => {\r\n      return prev + current.fastLength;\r\n    }, 0) / 3600) / history.filter(entry => entry.success === \"Yes\").length * 1000\r\n  ) / 1000\r\n\r\n  return (\r\n    <div className=\"historyRoot\">\r\n      <Row className=\"historyStatRoot\">\r\n        <Col sm={4}>\r\n          <Card className=\"statCard\">\r\n            <Card.Body>\r\n              <Card.Title>Completed Fasts</Card.Title>\r\n              <Card.Text className=\"statBody\">\r\n                {history.filter(entry => entry.success === \"Yes\").length}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={4}>\r\n          <Card className=\"statCard\">\r\n            <Card.Body>\r\n              <Card.Title>Total Hours Fasted</Card.Title>\r\n              <Card.Text className=\"statBody\">\r\n                {Math.round(\r\n                  (history.filter(entry => entry.success === \"Yes\").reduce((prev, current) => {\r\n                    return prev + current.fastLength;\r\n                  }, 0) / 3600) * 1000\r\n                ) / 1000}<span className=\"units\"> hrs</span>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={4}>\r\n          <Card className=\"statCard\">\r\n            <Card.Body>\r\n              <Card.Title>Average Fast Time</Card.Title>\r\n              <Card.Text className=\"statBody\">\r\n                {isNaN(averageFastTime) ? (0) : averageFastTime}<span className=\"units\"> hrs</span>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <h1>History</h1>\r\n      <div class=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n        <Table responsive bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Success?</th>\r\n              <th>Start Date</th>\r\n              <th>Fast Duration</th>\r\n              <th>Difficulty</th>\r\n              <th>Additional Comments</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {history.slice(0).reverse().map((entry) => {\r\n              return (\r\n                <tr>\r\n                  <td>{entry.id + 1}</td>\r\n                  <td>{entry.success}</td>\r\n                  <td>\r\n                    {entry.startDate.getFullYear() +\r\n                      \"-\" +\r\n                      (entry.startDate.getMonth() + 1) +\r\n                      \"-\" +\r\n                      entry.startDate.getDate() +\r\n                      \" \" +\r\n                      entry.startDate.getHours() +\r\n                      \":\" +\r\n                      entry.startDate.getMinutes() +\r\n                      \":\" +\r\n                      entry.startDate.getSeconds()}\r\n                  </td>\r\n                  <td>\r\n                    {Math.floor(entry.fastLength / 3600)}:{(entry.fastLength / 60) % 60}\r\n                  </td>\r\n                  <td>\r\n                    {entry.difficulty}\r\n                  </td>\r\n                  <td>\r\n                    {entry.additionalComments}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"./FastSurvey.css\";\r\n\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nclass FastSurvey extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            success: \"Yes\",\r\n            difficulty: \"Just Right\",\r\n            additionalComments: \"\",\r\n        };\r\n    }\r\n\r\n    handleRadioChangeS = (value) => {\r\n        this.setState(prevState => {\r\n            prevState.success = value;\r\n            return prevState;\r\n        });\r\n        console.log(this.state.success);\r\n    }\r\n\r\n    handleRadioChangeD = (value) => {\r\n        this.setState(prevState => {\r\n            prevState.difficulty = value;\r\n            return prevState;\r\n        });\r\n        console.log(this.state.difficulty);\r\n    }\r\n\r\n    handleCommentChange = (event) => {\r\n        this.setState({ additionalComments: event.target.value })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SelectionAreaBox\">\r\n                <div className=\"FastRatio\">\r\n                    <Form>\r\n                        <h3>Was the fast successful?</h3>\r\n                        <ToggleButtonGroup onChange={this.handleRadioChangeS}\r\n                            type=\"radio\" name=\"success\" defaultValue={\"Yes\"}>\r\n                            <ToggleButton\r\n                                type=\"radio\" name=\"radio\" value=\"Yes\">\r\n                                Yes\r\n                            </ToggleButton>\r\n                            <ToggleButton\r\n                                type=\"radio\" name=\"radio\" value=\"No\">\r\n                                No\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n\r\n                        <h3>How did it go?</h3>\r\n                        <ToggleButtonGroup onChange={this.handleRadioChangeD}\r\n                            type=\"radio\" name=\"difficulty\" defaultValue={\"Just Right\"}>\r\n                            <ToggleButton\r\n                                type=\"radio\" name=\"radio\" defaultChecked value=\"Too Easy\">\r\n                                Too Easy\r\n                            </ToggleButton>\r\n                            <ToggleButton\r\n                                type=\"radio\" name=\"radio\" value=\"Just Right\">\r\n                                Just Right\r\n                            </ToggleButton>\r\n                            <ToggleButton\r\n                                type=\"radio\" name=\"radio\" value=\"Too Hard\">\r\n                                Too Hard\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n\r\n                        <Form.Group controlId=\"comments\">\r\n                            <h3>Additional Comments</h3>\r\n                            <Form.Control as=\"textarea\" rows=\"2\" value={this.state.additionalComments} onChange={this.handleCommentChange} name=\"commments\" maxLength=\"140\" placeholder=\"Additional Comments\" required />\r\n                        </Form.Group>\r\n                        <Button className=\"Submit\" onClick={() => this.props.handleAddSurvey(this.state)}> Submit </Button>\r\n                    </Form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default FastSurvey;","import React from \"react\";\r\n\r\nimport Timer from \"./Timer.js\";\r\nimport History from \"./History.js\";\r\nimport FastSurvey from \"./FastSurvey.js\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      length: 0,\r\n      history: [],\r\n      promptSurvey: false,\r\n    };\r\n  }\r\n\r\n\r\n  handleAddFast = (length) => {\r\n    if (length === 16) {\r\n      this.setState((prevState) => {\r\n        return {\r\n          length: 16,\r\n          history: prevState.history,\r\n        };\r\n      });\r\n    } else if (length === 18) {\r\n      this.setState((prevState) => {\r\n        return {\r\n          length: 18,\r\n          history: prevState.history,\r\n        };\r\n      })\r\n    } else {\r\n      var minutes = parseFloat(document.getElementById(\"minutes\").value);\r\n      var hours = parseFloat(document.getElementById(\"hours\").value);\r\n      if (minutes !== minutes) {\r\n        minutes = 0;\r\n      }\r\n      if (hours !== hours) {\r\n        hours = 0;\r\n      }\r\n\r\n      if (hours < 0) {\r\n        hours = 0;\r\n      }\r\n      if (minutes < 0) {\r\n        minutes = 0;\r\n      }\r\n\r\n      this.setState((prevState) => {\r\n        let tempLength = hours + minutes / 60.0;\r\n        if (tempLength > 24) {\r\n          tempLength = 24;\r\n        }\r\n        return {\r\n          length: tempLength,\r\n          history: prevState.history,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFinished = (fastInfo) => {\r\n    this.surveyEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    this.setState((prevState) => {\r\n      fastInfo.id = prevState.history.length\r\n      fastInfo.success = \"Yes\"\r\n      return {\r\n        history: prevState.history.concat(fastInfo),\r\n        promptSurvey: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleAddSurvey = ({ success, difficulty, additionalComments }) => {\r\n    this.setState((prevState) => {\r\n      let item = prevState.history.pop();\r\n      item.success = success;\r\n      item.difficulty = difficulty;\r\n      item.additionalComments = additionalComments;\r\n      prevState.history.push(item);\r\n      return prevState;\r\n    });\r\n    this.setState({ promptSurvey: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\">\r\n          <Navbar.Brand>FastTrack</Navbar.Brand>\r\n          <Button className=\"ml-auto\" inline variant=\"outline-light\">Account</Button>\r\n        </Navbar>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col sm={5}>\r\n              <Timer\r\n                handleFinished={this.handleFinished}\r\n                totalFastTime={this.state.length * 3600}\r\n                handleAddFast={this.handleAddFast}\r\n              />\r\n              {!this.state.promptSurvey && <div><p className=\"InfoStyle\">Intermittent fasting, also known as intermittent energy restriction,\r\n              is an umbrella term for various meal timing schedules that cycle\r\n              between voluntary fasting and non-fasting over a given period.\r\n              Three methods of intermittent fasting are alternate-day fasting,\r\n              periodic fasting, and daily time-restricted feeding.</p>\r\n                <p className=\"InfoStyle\">Learn more about fasting <a className=\"Link\" href=\"https://tenor.com/wyxa.gif\">here!</a> :)</p>\r\n                <p>Please select your fasting to eating ratio or enter the number of hours and minutes you'd like to fast on the right.</p></div>}\r\n              {this.state.promptSurvey && <FastSurvey FastSurvey handleAddSurvey={this.handleAddSurvey} />}\r\n              <div ref={(el) => { this.surveyEnd = el; }}></div>\r\n            </Col>\r\n            <Col sm={7}>\r\n              <History history={this.state.history} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}